class MyLinkedList {

   class ListNode{
        int val;
        ListNode next;
        ListNode(int val) {
            this.val=val;
        }
   }

   private int size;
   private ListNode head;

   public MyLinkedList() {
        this.size = 0;
        this.head = new ListNode(0);
    }

   public int get(int index){
        if(index < 0 || index >= size){
            return -1;
        }

        ListNode cur = head;
        //第0个节点是虚拟头节点，所以查找第 index+1 个节点
        for (int i = 0; i <= index; i++) {
            cur = cur.next;
        }
        return cur.val;
   }

   public void addAtHead(int val){
        ListNode newNode = new ListNode(val);
        newNode.next = head.next;
        head.next = newNode;
        size++;
   }

   public void addAtTail(int val){
        ListNode newNode = new ListNode(val);
        ListNode cur = head;
        while(cur.next != null){ // 在开始时写成cur != null
            cur = cur.next;
        }
        cur.next = newNode;
        size++;
   }

   public void addAtIndex(int index ,int val){
        if (index < 0 || index > size) {
            return;
        }
        ListNode pre = head;
        for(int i = 0; i < index; i++){
            pre = pre.next;
        }
        ListNode newNode = new ListNode(val);
        newNode.next = pre.next;
        pre.next = newNode;
        size++;
   }

   public void deleteAtIndex(int index){
        ListNode pre = head;
        for(int i = 0 ; i < index; i++){
            pre = pre.next;
        }
        pre.next = pre.next.next;
        size--;
   }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
